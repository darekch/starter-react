// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<App /> snapshot 1`] = `
<App>
  <Provider
    store={
      Object {
        "dispatch": [Function],
        "getState": [Function],
        "injectedReducers": Object {},
        "injectedSagas": Object {},
        "replaceReducer": [Function],
        "runSaga": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      }
    }
  >
    <ConnectFunction
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <ConnectedRouterWithContext
        history={
          Object {
            "action": "POP",
            "block": [Function],
            "createHref": [Function],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          }
        }
        onLocationChanged={[Function]}
      >
        <ConnectedRouter
          history={
            Object {
              "action": "POP",
              "block": [Function],
              "createHref": [Function],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            }
          }
          onLocationChanged={[Function]}
          store={
            Object {
              "dispatch": [Function],
              "getState": [Function],
              "injectedReducers": Object {},
              "injectedSagas": Object {},
              "replaceReducer": [Function],
              "runSaga": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            }
          }
        >
          <Router
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              }
            }
          >
            <routes>
              <div>
                <nav>
                  <Link
                    to="/"
                  >
                    <a
                      href="/"
                      onClick={[Function]}
                    >
                      Home
                    </a>
                  </Link>
                  <Link
                    to="/asd"
                  >
                    <a
                      href="/asd"
                      onClick={[Function]}
                    >
                      Todo
                    </a>
                  </Link>
                </nav>
                <Switch />
              </div>
            </routes>
          </Router>
        </ConnectedRouter>
      </ConnectedRouterWithContext>
    </ConnectFunction>
  </Provider>
</App>
`;
